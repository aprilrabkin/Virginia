require 'mechanize'
require "rest_client"
require 'pry-nav'
require 'nokogiri'
require 'csv'

class Scraper 
	attr_reader :ids, :table, :rows, :ids
	def initialize
		@rows = []
	end

	def get_ocd_ids
		page = RestClient.get("https://raw.githubusercontent.com/opencivicdata/ocd-division-ids/master/identifiers/country-us/census_autogenerated/us_census_places.csv")
		noko = Nokogiri::HTML(page)
		@ids = noko.text.lines.select do |line|
			line =~ /state:ga/
		end.reject do |line|
			line =~ /place:/
		end.map do |line|
		  line.gsub(/,.+/, '').gsub(/\n/, '')
		end 
	end 

	def scrape_each_county_page
			agent = Mechanize.new 
			page = agent.get("http://www.votespa.com/portal/server.pt?open=514&objID=1174076&parentname=ObjMgr&parentid=1&mode=2")
			form = page.forms[0]
			count = form.field_with(:name=>"ddlCounty").options.count 
			#there are 68 options. drop the first one. the last one is index 67.
			binding.pry

			button = page.forms[1].buttons[0]
			newpage = agent.submit(form, button)
			@table = drop(0).newpage.parser.css('.subBody')
			parse_county
			i += 1
	end

	def parse_county
		table = @table.inner_html.gsub(/\n|\r|\t/,'').split('<br>').map do |el| 
			el.split('<hr>') 
		end.flatten
		if table[1]
			if table[1].include?("County")
				county_name = table[1].gsub(/County /,'County, ').split(',')[0]
				office = table[1].gsub(/County /,'County, ').split(',')[1].strip
			end
		end
		phone = (@table.text.scan /Telephone: \(\d*\)\s?\d*-\d*.*/).map do |p| p.gsub(/Telephone: |\n|\r|\t/,'') end
		website = ( (@table.text.scan /Website: .*/).first || "").gsub('Website: ', '')
		id = @ids.find do |i|
			if county_name
				name = county_name.gsub(" County", "")
			end
			i =~ /county:#{name}/i
		end || ""
		@rows << [county_name, office, phone, website, id].flatten!	
	end			

	def write_into_CSV_file

		CSV.open("spreadsheet.csv", "wb") do |csv|
			@rows.map do |line|
				csv << line
			end
		end
	end

end

a = Scraper.new
a.scrape_each_county_page
