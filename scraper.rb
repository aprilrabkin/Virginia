require 'mechanize'
require "rest_client"
require 'pry-nav'
require 'nokogiri'
require 'csv'

class Scraper 
	attr_reader :ids, :table, :rows, :ids, :newpage, :jurisdiction_name, :website
	def initialize
		@rows = []
	end

	def get_ocd_ids
		page = RestClient.get("https://raw.githubusercontent.com/opencivicdata/ocd-division-ids/master/identifiers/country-us/census_autogenerated/us_census_places.csv")
		noko = Nokogiri::HTML(page)
		@ids = noko.text.lines.select do |line|
			line =~ /state:va/
		end
	end 

	def scrape_each_county_page
		i = 1	
		while i < 134 do 
			agent = Mechanize.new
			page = agent.get("https://voterinfo.sbe.virginia.gov/PublicSite/Public/FT2/PublicContactLookup.aspx")
			form = agent.page.forms.first
			form.field_with(:name=>"ctl00$ContentPlaceHolder1$usrCounty$cboCounty").options[i].click
			@jurisdiction_name = form.field_with(:name=>"ctl00$ContentPlaceHolder1$usrCounty$cboCounty").options[i].text
			@newpage = form.submit.parser
			parse_county
			i += 1
		end
	end

	def parse_county

		phone = newpage.css('#ctl00_ContentPlaceHolder1_usrLocalityRegContact_usrPhone_lblPhoneText').text
		@jurisdiction_name = @jurisdiction_name.downcase.split(" ").map(&:capitalize).join(" ")
		office = @jurisdiction_name + " Voter Registration Office"
		
		if @jurisdiction_name.include?("Charles City County") 
			first_column = ""
			second_column = @jurisdiction_name
		elsif @jurisdiction_name.include?("City") 
			first_column = @jurisdiction_name
			second_column = ""
		else
			first_column = ""
			second_column = @jurisdiction_name
		end

		@rows << [first_column, second_column, "VA", office, phone, get_website, match_ocd]

	end			

	def get_website
		first_url = newpage.css('#ctl00_ContentPlaceHolder1_usrLocalityRegContact_lblClickableURL').text
		second_url = newpage.css('#ctl00_ContentPlaceHolder1_usrLocalityElectionBoard_lblClickableURL').text
		if first_url != ""
			website = first_url
		elsif second_url != ""
			website = second_url
		else 
			website = ""
		end
		website

	end

	def match_ocd
		if @jurisdiction_name.include?("County")
			name = @jurisdiction_name.rstrip.gsub(/\scounty/i, "").gsub(" ", "_").gsub("&", "and")
			id = @ids.reject do |line|
					line =~ /place:/
				end.map do |line|
				line
			end.find do |id|
				id =~ /county:#{name}/i
			end
			if id
				id.gsub(/,.+/, '').gsub(/\n/, '')
			end
		elsif @jurisdiction_name.include?("City")
			name = @jurisdiction_name.gsub(/\scity/i, "").gsub(" ", "_")
			id = @ids.find do |id|
				id =~ /place:#{name}/i
			end
			if id 
				id.gsub(/,.+/, '').gsub(/\n/, '')
			end
		else 
			id = ""
		end
		# may need to add ocd-division/country:us/state:va/county:king_and_queen 

	end
	def write_into_CSV_file
		CSV.open("spreadsheet.csv", "wb") do |csv|
			@rows.map do |line|
				csv << line
			end
		end
	end

end

a = Scraper.new
a.get_ocd_ids
a.scrape_each_county_page
a.write_into_CSV_file
